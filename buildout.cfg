# plone.app.event plip
# ====================
# see:
# http://dev.plone.org/plone/ticket/10886
# for reference, the old plip:
# http://dev.plone.org/plone/ticket/9302

[buildout]
extends =
    http://svn.plone.org/svn/collective/buildout/plonetest/plone-4.1.x.cfg
    sources.cfg
    dexterity.cfg

extensions = mr.developer
always-accept-server-certificate = true
sources-dir = ${buildout:directory}/devsrc
develop = .
auto-checkout -= plone.app.event

package-name = plone.app.event

parts +=
    omelette
    test
    releaser
    zopepy
    sphinxbuilder
    sphinxupload

[remotes]
# R/O CHECKOUTS
plone = git://github.com/plone
collective = git://github.com/collective

[instance]
eggs +=
    plone.reload
    Pillow

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}
packages = ${instance:location}/lib/python ./

[releaser]
recipe = zc.recipe.egg
eggs = jarn.mkrelease

[zopepy]
recipe = zc.recipe.egg
eggs =
    ${test:eggs}
interpreter = zopepy
scripts = zopepy

[sphinxbuilder]
recipe = collective.recipe.sphinxbuilder
interpreter = ${buildout:directory}/bin/zopepy

[sphinxupload]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    bin/zopepy setup.py upload_sphinx
output = ${buildout:directory}/bin/sphinxupload
mode = 755


[testenv]
APP_PATH = ${buildout:directory}

[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
environment = testenv

[coverage-test]
recipe = zc.recipe.testrunner
eggs = ${test:eggs}
defaults = ['--coverage', '../../coverage', '-v', '--auto-progress']

[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coveragereport
arguments = ('coverage', 'report')

